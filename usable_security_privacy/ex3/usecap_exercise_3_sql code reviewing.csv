"Duration (in seconds)","p_id","Q60_Page Submit","Q10","Q62","Q63","Q51","Q51_2_TEXT","Q64_Page Submit","Q67","Q68","Q69","Q70","Q70_2_TEXT","Q76","Q22","Q54_1","Q56_10","Q74_10","Q77","Q77_2_TEXT","Q36","Q37"
"Duration (in seconds)","p_id","Timing - Page Submit","What did you check for?","Please write all issues you recognized. What are your suggestions for solving them?","Do you approve the release of the code?","How did you review the code snippet? - Selected Choice","How did you review the code snippet? - Using the following tools: - Text","Timing - Page Submit","What did you check for?","Please write all issues you recognized. What are your suggestions for solving them?","Do you approve the release of the code?","How did you review the code snippet? - Selected Choice","How did you review the code snippet? - Using the following tools: - Text","If you had not been asked to ensure that the code is secure, do you think you would have checked for security?","Did you check for security?","Please select what is more important ... - ... to you:","What percentage of your programming time do you spend on security? - Please use the slider.","What percentage of your development time do you dedicate to review code written by others? - Please use the slider.","How do you usually review code written by others? - Selected Choice","How do you usually review code written by others? - Using the following tools: - Text","How many years of experience do you have with software development in general?","How many years of experience do you have with Java development?"
572,"N1",357.212,"If variables put into query are injection safe","Destination and Lastname variables are switched Variables are not escaped Not sure, how resultSet.getString() works, but perhaps the bookingID is at 0 and therefore all the values have to be reduced by one","Code did not pass review, please fix issues as mentioned above.","Manually",,,,,,,,,"Yes",100,55,50,"Manually",,5,10
2078,"N2",437.001,"Known bugs and style.","'- SQL-Injection -> use a proper library to handle interfacing with the database. Easiest is to use something with ORM. - There is an empty catch block -> exceptions should be properly handled.  - A Class is constructed from Name -> just don't, use a proper reference.  - The result output with string concatination is ugly -> formatstrings - The database connection is hardcoded including a password -> that should be in a config file","Code did not pass review, please fix issues as mentioned above.","Manually",,,,,,,,,"Yes",100,30,20,"Manually",,7,4
3024,"N3",2677.86,"1. Syntax 2. Logic 3. Error reports, if any","1. Use param placeholders in the query rather than string concat.  2. input null validation, since those are query params. 3. a block to close the connection since no connection pool here. 4. in the query params for destination, lastname is switched.","The code can be released but the issues mentioned above need to be fixed for the next update.","Manually",,,,,,,,,"No",50,20,30,"Using the following tools:","IDE, debugger and manually as well",2,1
2132,"N4",1602.105,"Bugs, style, quality, documentation, whether it is easy to understand or not,  ","1. All the things are happening in just one place like taking inputs, accessing database, showing results etc.  Suggestion: Divide it into several functions. Like one for taking input. Another for creating Dao, another for returning the result, another for showing the result. Say for instance, it is decided later that the database should be migrated to MongoDB instead of SQL, then the whole things need to be changed. Whereas if you create a separate Dao, you can actually change that part specifically.  2. No proper documentation  Suggestion: Follow the standard documentation style  3. No Exception handling while displaying result  Suggestion: Please add some meaningful statements to convey the user in case the result set is null","Code did not pass review, please fix issues as mentioned above.","Manually",,,,,,,,,"Yes",50,30,10,"Manually",,3,3
715,"N5",398.724,"I check ""return"". Than i check the ""Exception"".Than i would check the Password","The Problem is, that the password is unsure. To solve this Problem, we have to use a better password","The code can be released but the issues mentioned above need to be fixed for the next update.","Manually",,,,,,,,,"No",77,20,32,"Manually",,3,1
582,"P1",,,,,,,376.218,"Logical errors","'- password/username is hardcoded in plaintext   store them seperately - password too simple   change password - query string is wrong   swap last name and destination","Code did not pass review, please fix issues as mentioned above.","Manually",,"No","Yes",40,0,0,"Manually",,8,6
1348,"P2",,,,,,,895.363,"I tried to follow the data flow with the intent of the code in mind.","First, the user input is not sanitized. SQL injection would easily be possible since strings are merely concatenated. Secondly, there is no authentication mechanism. Even without the capability of injecting SQL code, a user could access another users data. Thirdly, all information to access the database are given in a static string. The password is also not secure at all.  The first issue could be solved by having a strict policy on which inputs are allowed. This policy has to be enforced by dedicated sanitizing functions. The second issue might be resolved by having a separate login mechanism that gives a user the rights to access his data. The third issue can be resolved by querying the information needed to access the database from a server for example. The respective communication channel has to be secure as well.","Code did not pass review, please fix issues as mentioned above.","Manually",,"Yes","Yes",50,15,30,"Manually",,"3 1/2",0
751,"P3",,,,,,,454.393,"Syntax and secure passwords.","1234 is a bad password. Solution: Choose a different password.","Code did not pass review, please fix issues as mentioned above.","Manually",,"No","Yes",38,4,25,"Manually",,5,5
1700,"P4",,,,,,,1168.164,"Potential buffer overflows, although very unlikely in Java;  SQL injections; Credentials in plain text and their strength;  Error Handling","The credentials are in plaintext in the code, instead they should be stored seperately and encrypted.  Also the credentials are very weak, potentially leaving the database easily accessable by unauthorized individuals, therefore they should be changed to something stronger. The error handling in this code is basically non-existant, if an error occurs during the SQL command execution, it will just get silentry suppressed. This can lead to attacks being completely silent when causing errors in the program (see next point). Finally, the code is vulnerable to a very serious SQL injection. Users can specify any string they want and it will directly get put into a SQL command, therefore users can execute arbitrary SQL commands (like leaking/deleting the database) by specifying carefully crafted data into the booking id/name/destination fields, and errors won't even trigger any logging or error handling.","Code did not pass review, please fix issues as mentioned above.","Using the following tools:","IntelliJ IDEA","Yes","Yes",40,30,20,"Using the following tools:","IntelliJ IDEA for Java programs, else other Jetbrain tools or VSCode (or potentially something like valgrind)",7,7
1887,"P5",,,,,,,640.928,"Everything that seems like a potential risk for me","In > String connectionUrl =             ""jdbc:sqlserver://localhost;databaseName=UsersDb;username=sa;password=1234""; The Username and Password are shown in clear text. Depending on how easy it is to leak or reconstruct the source-code this is an major issue. Furthermore the User-Database of a Company should never ever have such a weak password!  The Exceptions are no catched.","Code did not pass review, please fix issues as mentioned above.","Manually",,"No","Yes",40,7,20,"Manually",,7,5
